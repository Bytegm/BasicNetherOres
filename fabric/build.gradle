plugins {
    id 'multiloader-loader'
    id 'fabric-loom' version '1.6-SNAPSHOT'
}
base {
    archivesName = "${archive_name}-fabric-${minecraft_version}"
}
repositories {
    maven {
        url = "https://maven.modmuss50.me/"
    }
}
dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'

    // compile against the JEI API but do not include it at runtime
    modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}")
    // at runtime, use the full JEI jar for Fabric
    modRuntimeOnly("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}")

    modRuntimeOnly "maven.modrinth:modmenu:${modmenu_version}"

    modImplementation "me.zeroeightsix:fiber:0.23.0-2"
    include "me.zeroeightsix:fiber:0.23.0-2"
}

loom {
    def aw = project(":common").file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("runs/client")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("runs/server")
        }
        comdatagen {
            client()
            setConfigName("Common Datagen")
            ideConfigGenerated(true)
            vmArg("-Dbno.common_datagen=1")
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("../common/src/generated")}"
            vmArg "-Dfabric-api.datagen.modid=${mod_id}"

            runDir "build/datagen"
        }
        datagen {
            inherit client
            setConfigName("Fabric Datagen")
            name "Fabric Datagen"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated")}"
            vmArg "-Dfabric-api.datagen.modid=${mod_id}"

            runDir "build/datagen"
        }
    }
    processResources {
        from project(":common").file('src/generated').getAbsolutePath()
    }
}