plugins {
    id 'multiloader-loader'
    id 'fabric-loom' version '1.6-SNAPSHOT'
}

base {
    archivesName = "${mod_name}-fabric-${minecraft_version}"
}
repositories{
    maven {
        name = "ModMenu"
        url 'https://maven.terraformersmc.com/releases/' }

    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }

    maven {
        url = "https://maven.modmuss50.me/"
    }
}
dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'

    modCompileOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
    modRuntimeOnly "com.terraformersmc:modmenu:${project.modmenu_version}"

    // compile against the JEI API but do not include it at runtime
    modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}")
    // at runtime, use the full JEI jar for Fabric
    modRuntimeOnly("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}")

    modImplementation "me.zeroeightsix:fiber:0.23.0-2"
    include "me.zeroeightsix:fiber:0.23.0-2"
}

loom {
    var aw = project(":common").file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) accessWidenerPath.set(aw)

    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            programArgs('--username', 'Dev')
            runDir("runs/client")
        }
        datagen {
            inherit client
            name "Fabric Datagen"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated")}"
            vmArg "-Dfabric-api.datagen.modid=${mod_id}"

            runDir "build/datagen"
        }
    }
}